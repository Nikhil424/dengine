{"name":"elasticsearch","version":"3.2.0","description":"Installs and configures Elasticsearch","long_description":"# Elasticsearch Chef Cookbook\n\n[![Build Status](https://travis-ci.org/elastic/cookbook-elasticsearch.svg?branch=master)](https://travis-ci.org/elastic/cookbook-elasticsearch) [![Cookbook Version](https://img.shields.io/cookbook/v/elasticsearch.svg)](https://supermarket.chef.io/cookbooks/elasticsearch)[![Build Status](https://jenkins-01.eastus.cloudapp.azure.com/job/elasticsearch-cookbook/badge/icon)](https://jenkins-01.eastus.cloudapp.azure.com/job/elasticsearch-cookbook/)\n\n## Pre-requisites & Supported Versions\n\n[Java Runtime](https://www.java.com/en/) - This cookbook requires java, but does not provide it. Please install Java before using any recipe in this cookbook. Please also note that Elasticsearch itself has [specific minimum Java version requirements](https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html#jvm-version). We recommend [this cookbook](https://github.com/agileorbit-cookbooks/java) to install Java.\n\n[Elasticsearch](https://www.elastic.co/products/elasticsearch) - This cookbook is being written and tested to support Elasticsearch 5.x and greater. If you must have a cookbook that works with older versions of Elasticsearch, please test and then pin to a specific, older `major.minor` version of this cookbook and only leave the patch release to float. Older versions can be found via [Git tags](https://github.com/elastic/cookbook-elasticsearch/tags) or on [Chef Supermarket](https://supermarket.chef.io/cookbooks/elasticsearch). We also maintain bugfix branches for major released lines (0.x, 1.x, 2.x) of this cookbook so that we can still release fixes for older cookbooks.\n\n[Chef](https://www.chef.io/) - The latest release of this cookbook is intended to support the three most recent releases of Chef, and tests against those. Earlier versions may also be supported, though we suggest that you use Chef 12.x at a minimum. It implements support for CI as well as more modern testing with chefspec and test-kitchen. It no longer supports some of the more extraneous features such as discovery (use [chef search](https://docs.chef.io/chef_search.html) in your wrapper cookbook) or EBS device creation (use [the aws cookbook](https://github.com/chef-cookbooks/aws)).\n\n**Previous versions** of this cookbook may be found using the git tags on this repository.\n\n**Upgrading Elasticsearch** in place is not recommended, and generally not supported by this cookbook. We strongly recommend you pin versions of Elasticsearch and spin up new servers to migrate to a new version, one node at a time. This cookbook does not generally set destructive options like asking the package manager to overwrite configuration files without prompting, either.\n\n## Attributes\n\nPlease consult [attributes/default.rb](attributes/default.rb) for a large list\nof checksums for many different archives and package files of different\nelasticsearch versions. Both recipes and resources/providers here use those\ndefault values.\n\nYou may use `%s` in your URL and this cookbook will use sprintf/format to insert\nthe version parameter as a string into your download_url.\n\n|Name|Default|Other values|\n|----|-------|------------|\n|`default['elasticsearch']['download_urls']['debian']`|[See values](attributes/default.rb).|`%s` will be replaced with the version attribute above|\n|`default['elasticsearch']['download_urls']['rhel']`|[See values](attributes/default.rb).|`%s` will be replaced with the version attribute above|\n|`default['elasticsearch']['download_urls']['tarball']`|[See values](attributes/default.rb).|`%s` will be replaced with the version attribute above|\n\nThis cookbook's `elasticsearch::default` recipe also supports setting any `elasticsearch_` resource using attributes:\n\n```\ndefault['elasticsearch']['user'] = {}\ndefault['elasticsearch']['install'] = {}\ndefault['elasticsearch']['configure'] = {}\ndefault['elasticsearch']['service'] = {}\ndefault['elasticsearch']['plugin'] = {}\n```\n\nFor example, this will pass a username 'foo' to `elasticsearch_user` and set a uid to `1234`:\n```\ndefault['elasticsearch']['user']['username'] = 'foo'\ndefault['elasticsearch']['user']['uid'] = '1234'\n```\n\n## Recipes\n\nResources are the intended way to consume this cookbook, however we have\nprovided a single recipe that configures Elasticsearch by downloading an archive\ncontaining a distribution of Elasticsearch, and extracting that into `/usr/share`.\n\nSee the attributes section above to for what defaults you can adjust.\n\n### default\n\nThe default recipe creates an elasticsearch user, group, package installation,\nconfiguration files, and service with all of the default options.\n\nPlease note that there are [additional examples within the test fixtures](test/fixtures/cookbooks/elasticsearch_test),\nincluding a demonstration of how to configure two instances of Elasticsearch on a single server.\n\n## Resources\n\n## Notifications and Service Start/Restart\n\nThe resources provided in this cookbook **do not automatically restart** services when changes have occurred. They ***do start services by default when configuring a new service*** This has been done to protect you from accidental data loss and service outages, as nodes might restart simultaneously or may not restart at all when bad configuration values are supplied.\n\nelasticsearch_service has a special `service_actions` parameter you can use to specify what state the underlying service should be in on each chef run (defaults to `:enabled` and `:started`). It will also pass through all of the standard `service` resource\nactions to the underlying service resource if you wish to notify it.\n\nYou **must** supply your desired notifications when using each resource if you want Chef to automatically restart services. Again, we don't recommend this unless you know what you're doing.\n\n### Resource names\n\nMany of the resources provided in this cookbook need to share configuration\nvalues. For example, the `elasticsearch_service` resource needs to know the path\nto the configuration file(s) generated by `elasticsearch_configure` and the path\nto the actual ES binary installed by `elasticsearch_install`. And they both need\nto know the appropriate system user and group defined by `elasticsearch_user`.\n\nSearch order: In order to make this easy, all resources in this cookbook use the following\nsearch order to locate resources that apply to the same overall\nElasticsearch setup:\n\n1. Resources that share the same resource name\n1. Resources that share the same value for `instance_name`\n1. Resources named `default` or resources named `elasticsearch`\n   - This fails if both `default` and `elasticsearch` resources exist\n\nExamples of more complicated resource names are left to the reader, but here we\npresent a typical example that should work in most cases:\n\n```ruby\nelasticsearch_user 'elasticsearch'\nelasticsearch_install 'elasticsearch'\nelasticsearch_configure 'elasticsearch'\nelasticsearch_service 'elasticsearch'\nelasticsearch_plugin 'x-pack'\n```\n\n### elasticsearch_user\nActions: `:create`, `:remove`\n\nCreates a user and group on the system for use by elasticsearch. Here is an\nexample with many of the default options and default values (all options except\na resource name may be omitted).\n\nExamples:\n\n```ruby\nelasticsearch_user 'elasticsearch'\n```\n\n```ruby\nelasticsearch_user 'elasticsearch' do\n  username 'elasticsearch'\n  groupname 'elasticsearch'\n  shell '/bin/bash'\n  comment 'Elasticsearch User'\n\n  action :create\nend\n```\n\n### elasticsearch_install\nActions: `:install`, `:remove`\n\nDownloads the elasticsearch software, and unpacks it on the system. There are\ncurrently three ways to install -- `'repository'` (the default), which creates an\napt or yum repo and installs from there, `'package'`, which downloads the appropriate\npackage from elasticsearch.org and uses the package manager to install it, and\n`'tarball'` which downloads a tarball from elasticsearch.org and unpacks it.\nThis resource also comes with a `:remove` action which will remove the package\nor directory elasticsearch was unpacked into.\n\nYou may always specify a download_url and/or download_checksum, and you may\ninclude `%s` which will be replaced by the version parameter you supply.\n\nPlease be sure to consult the above attribute section as that controls how\nElasticsearch version, download URL and checksum are determined if you omit\nthem.\n\nExamples:\n\n```ruby\nelasticsearch_install 'elasticsearch'\n```\n\n```ruby\nelasticsearch_install 'my_es_installation' do\n  type 'package' # type of install\n  version '5.4.0'\n  action :install # could be :remove as well\nend\n```\n\n```ruby\nelasticsearch_install 'my_es_installation' do\n  type 'tarball' # type of install\n  dir tarball: '/usr/local' # where to install\n\n  download_url \"https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.7.2.tar.gz\"\n  # sha256\n  download_checksum \"6f81935e270c403681e120ec4395c28b2ddc87e659ff7784608b86beb5223dd2\"\n\n  action :install # could be :remove as well\nend\n```\n\n```ruby\nelasticsearch_install 'my_es_installation' do\n  type 'tarball' # type of install\n  version '5.4.0'\n  action :install # could be :remove as well\nend\n```\n\n```ruby\nelasticsearch_install 'my_es_installation' do\n  type 'package' # type of install\n  download_url \"https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.7.2.deb\"\n  # sha256\n  download_checksum \"791fb9f2131be2cf8c1f86ca35e0b912d7155a53f89c2df67467ca2105e77ec2\"\n  instance_name 'elasticsearch'\n  action :install # could be :remove as well\nend\n```\n\n### elasticsearch_configure\nActions: `:manage`, `:remove`\n\nConfigures an elasticsearch instance; creates directories for configuration,\nlogs, and data. Writes files `log4j2.properties`, `elasticsearch.in.sh` and\n`elasticsearch.yml`.\n\nThe main attribute for this resource is `configuration`,\nwhich is a hash of any elasticsearch configuration directives. The\nother important attribute is `default_configuration` -- this contains the\nminimal set of required defaults.\n\nNote that these are both _not_ a Chef mash, everything must be in a single level\nof keys and values. Any settings you pass in configuration will be merged into\n(and potentially overwrite) any default settings.\n\nSee the examples, [as well as the attributes in the resource file](libraries/resource_configure.rb),\nfor more.\n\nExamples:\n\nWith all defaults -\n```ruby\nelasticsearch_configure 'elasticsearch'\n```\n\nWith mostly defaults -\n```ruby\nelasticsearch_configure 'elasticsearch' do\n    allocated_memory '512m'\n    configuration ({\n      'cluster.name' => 'escluster',\n      'node.name' => 'node01',\n      'http.port' => 9201\n    })\nend\n```\n\nVery complicated -\n```ruby\nelasticsearch_configure 'my_elasticsearch' do\n  # if you override one of these, you probably want to override all\n  path_home     \"/opt/elasticsearch\"\n  path_conf     \"/etc/opt/elasticsearch\"\n  path_data     \"/var/opt/elasticsearch\"\n  path_logs     \"/var/log/elasticsearch\"\n  path_pid      \"/var/run/elasticsearch\"\n  path_plugins  \"/opt/elasticsearch/plugins\"\n  path_bin      \"/opt/elasticsearch/bin\"\n\n  # override logging parameters\n  cookbook_log4j2_properties \"my_wrapper_cookbook\"\n  template_log4j2_properties \"my_log4j2.properties.erb\"\n\n  logging({:\"action\" => 'INFO'})\n\n  allocated_memory '123m'\n\n  jvm_options %w(\n                -XX:+UseParNewGC\n                -XX:+UseConcMarkSweepGC\n                -XX:CMSInitiatingOccupancyFraction=75\n                -XX:+UseCMSInitiatingOccupancyOnly\n                -XX:+HeapDumpOnOutOfMemoryError\n                -XX:+PrintGCDetails\n              )\n\n  configuration ({\n    'node.name' => 'crazy'\n  })\n\n  action :manage\nend\n```\n\n### elasticsearch_service\nActions: `:configure`, `:remove`\n\nWrites out a system service configuration of the appropriate type, and enables\nit to start on boot. You can override almost all of the relevant settings in\nsuch a way that you may run multiple instances. Most settings will be taken from\na matching `elasticsearch_config` resource in the collection.\n\n```ruby\nelasticsearch_service 'elasticsearch'\n```\n\n### elasticsearch_plugin\nActions: `:install`, `:remove`\n\nInstalls or removes a plugin to a given elasticsearch instance and plugin\ndirectory. Please note that there is currently no way to upgrade an existing\nplugin using commandline tools, so we haven't exposed that feature here either.\nFurthermore, there isn't a way to determine if a plugin is compatible with ES or\neven what version it is. So once we install a plugin to a directory, we\ngenerally assume that is the desired one and we don't touch it further.\n\nSee https://github.com/elastic/cookbook-elasticsearch/issues/264 for more info.\nNB: You [may encounter issues on certain distros](http://blog.backslasher.net/java-ssl-crash.html) with NSS 3.16.1 and OpenJDK 7.x.\n\nOfficially supported or commercial plugins require just the plugin name:\n\n```ruby\nelasticsearch_plugin 'analysis-icu' do\n  action :install\nend\nelasticsearch_plugin 'shield' do\n  action :install\nend\n```\n\nPlugins from GitHub require a URL of 'username/repository' or 'username/repository/version':\n\n```ruby\nelasticsearch_plugin 'kopf' do\n  url 'lmenezes/elasticsearch-kopf'\n  action :install\nend\n\nelasticsearch_plugin 'kopf' do\n  url 'lmenezes/elasticsearch-kopf/1.5.7'\n  action :install\nend\n```\n\nPlugins from Maven Central or Sonatype require 'groupId/artifactId/version':\n```ruby\nelasticsearch_plugin 'mapper-attachments' do\n  url 'org.elasticsearch/elasticsearch-mapper-attachments/2.6.0'\n  action :install\nend\n```\n\nPlugins can be installed from a custom URL or file location as follows:\n```ruby\nelasticsearch_plugin 'mapper-attachments' do\n  url 'http://some.domain.name//my-plugin-1.0.0.zip'\n  action :install\nend\n\nelasticsearch_plugin 'mapper-attachments' do\n  url 'file:/path/to/my-plugin-1.0.0.zip'\n  action :install\nend\n```\n\nThe plugin resource respects the `https_proxy` or `http_proxy` (non-SSL)\n[Chef settings](https://docs.chef.io/config_rb_client.html) unless explicitly\ndisabled using `chef_proxy false`:\n```ruby\nelasticsearch_plugin 'kopf' do\n  url 'lmenezes/elasticsearch-kopf'\n  chef_proxy false\n  action :install\nend\n```\n\nTo run multiple instances per machine, an explicit `plugin_dir` location\nhas to be provided:\n\n```ruby\nelasticsearch_plugin 'x-pack' do\n  plugin_dir '/usr/share/elasticsearch_foo/plugins'\nend\n```\n\nIf for some reason, you want to name the resource something else, you may\nprovide the true plugin name using the `plugin_name` parameter:\n\n```ruby\nelasticsearch_plugin 'xyzzy' do\n  plugin_name 'kopf'\n  url 'lmenezes/elasticsearch-kopf'\n  action :install\nend\n```\n\n## Testing\n\nThis cookbook is equipped with both unit tests (chefspec) and integration tests\n(test-kitchen and serverspec). It also comes with rubocop and foodcritic tasks\nin the supplied Rakefile. Contributions to this cookbook should include tests\nfor new features or bugfixes, with a preference for unit tests over integration\ntests to ensure speedy testing runs. ***All tests and most other commands here\nshould be run using bundler*** and our standard Gemfile. This ensures that\ncontributions and changes are made in a standardized way against the same\nversions of gems. We recommend installing rubygems-bundler so that bundler is\nautomatically inserting `bundle exec` in front of commands run in a directory\nthat contains a Gemfile.\n\nA full test run of all tests and style checks would look like:\n```bash\n$ bundle exec rake style\n$ bundle exec rake spec\n$ bundle exec rake integration\n$ bundle exec rake destroy\n```\nThe final destroy is intended to clean up any systems that failed a test, and is\nmostly useful when running with kitchen drivers for cloud providers, so that no\nmachines are left orphaned and costing you money.\n\n### Fixtures\n\nThis cookbook supplies a few different test fixtures (under `test/fixtures/`)\nthat can be shared amongst any number of unit or integration tests: cookbooks,\nenvironments, and nodes. Environments and nodes are automatically loaded into\nchef-zero for both chefspec tests that run locally and serverspec tests that run\nfrom test-kitchen.\n\nIt also contains 'platform data' that can be used to drive unit testing, for\nexample, you might read `httpd` for some platforms and `apache2` for others,\nallowing you to write a single test for the Apache webserver. Unfortunately,\nwithout further modifications to `busser` and `busser-serverspec`, the platform\ndata will not be available to serverspec tests.\n\n### Style and Best Practices\n\nRubocop and Foodcritic evaluations may be made by running `rake style`. There\nare no overrides for foodcritic rules, however the adjustments to\nrubocop are made using the supplied `.rubocop.yml` file and have been documented\nby comments within. Most notably, rubocop has been restricted to only apply to\n`.rb` files.\n\nRubocop and foodcritic tests can be executed using `rake style`.\n\n### Unit testing\n\nUnit testing is done using the latest versions of Chefspec. The current default\ntest layout includes running against all supported platforms, as well as\nstubbing data into chef-zero. This allows us to also test against chef search.\nAs is currently a best practice in the community, we will avoid the use of\nchef-solo, but not create barriers to explicitly fail for chef-solo.\n\nUnit tests can be executed using `rake spec`.\n\n### Integration testing\n\nIntegration testing is accomplished using the latest versions of test-kitchen\nand serverspec. Currently, this cookbook uses the busser-serverspec plugin for\ncopying serverspec files to the system being tested. There is some debate in the\ncommunity about whether this should be done using busser-rspec instead, and each\nbusser plugin has a slightly different feature set.\n\nWhile the default test-kitchen configuration uses the vagrant driver, you may\noverride this using `~/.kitchen/config.yml` or by placing a `.kitchen.local.yml`\nin the current directory. This allows you to run these integration tests using\nany supported test-kitchen driver (ec2, rackspace, docker, etc).\n\nIntegration tests can be executed using `rake integration` or `kitchen test`.\n\n## License\n\nThis software is licensed under the Apache 2 license, quoted below.\n\n    Copyright (c) 2015 Elasticsearch <https://www.elastic.co/>\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n","maintainer":"Karel Minarik","maintainer_email":"karel.minarik@elasticsearch.org","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","redhat":">= 0.0.0","ubuntu":">= 0.0.0"},"dependencies":{"apt":">= 0.0.0","yum":">= 0.0.0","chef-sugar":">= 0.0.0","ark":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/elastic/cookbook-elasticsearch","issues_url":"https://github.com/elastic/cookbook-elasticsearch/issues","chef_version":[[">= 12.5"]],"ohai_version":[]}