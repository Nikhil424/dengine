-- Permissions

-- Requires setting the variable 'database_name' (this is to accommodate test scripts)
--------------------------------------------------------------------------------

-- Public Schema Permissions
--------------------------------------------------------------------------------
GRANT ALL ON ALL TABLES IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_user'] %>;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_user'] %>;
GRANT ALL ON ALL FUNCTIONS IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_user'] %>;

GRANT SELECT ON ALL TABLES IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_ro_user'] %>;
GRANT USAGE ON ALL SEQUENCES IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_ro_user'] %>;
GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO <%= node['chef-compliance']['core']['sql_ro_user'] %>;

-- The read-only user is intended for actual humans to use
-- interactively for debugging purposes; sometimes creating temporary
-- tables is a nice thing to be able to do in that situation. We
-- don't need temporary tables as the 'chef_compliance' user, though; that's
-- for the API server.
GRANT TEMPORARY ON DATABASE chef_compliance TO <%= node['chef-compliance']['core']['sql_ro_user'] %>;
