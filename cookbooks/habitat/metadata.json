{"name":"habitat","version":"0.26.0","description":"Habitat related cookbooks for chef-client","long_description":"# Habitat Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/habitat.svg?branch=master)](https://travis-ci.org/chef-cookbooks/habitat) [![Cookbook Version](https://img.shields.io/cookbook/v/habitat.svg)](https://supermarket.chef.io/cookbooks/habitat)\n\nThis cookbook provides resources for working with [Habitat](https://habitat.sh). It is intended that these resources will be included in core Chef at some point in the future, so it is important to note:\n\n- APIs are subject to change\n- Habitat is a rapidly changing product, and this cookbook may change rapidly as well\n\n(this is a pre-1.0 version, after all)\n\n## Requirements\n\n### Platforms\n\n- RHEL 7+\n- Ubuntu 16.04+\n\n### Habitat\n\n- 0.26+ (for channel support)\n\n### Chef\n\n- Chef 12.11+\n\n### Cookbooks\n\n- None\n\n## Resources\n\n### hab_install\n\nInstalls Habitat on the system using the [install script](https://raw.githubusercontent.com/habitat-sh/habitat/master/components/hab/install.sh).\n\n#### Actions\n\n- `install`: Installs Habitat. Does nothing if the `hab` binary is found in the default location for the system (`/bin/hab` on Linux, `/usr/local/bin/hab` on macOS)\n- `upgrade`: Installs the latest version of Habitat, does not check if the binary exists\n\n#### Properties\n\n- `install_url`: URL to the install script, default is from the [habitat repo](https://raw.githubusercontent.com/habitat-sh/habitat/master/components/hab/install.sh)\n- `depot_url`: Optional URL to an alternate Depot (defaults to the public Depot)\n- `version`: The version of habitat to install (defaults to latest)\n- `channel`: The release channel to install from (defaults to `stable`)\n\n#### Examples\n\n```ruby\nhab_install 'install habitat'\n```\n\n```ruby\nhab_install 'install habitat' do\n  version \"0.12.0\"\nend\n```\n\n```ruby\nhab_install 'install habitat' do\n  depot_url \"http://localhost/v1/depot\"\nend\n```\n\n### hab_package\n\nInstall the specified Habitat package. Requires that Habitat is installed\n\nThis resource is written as a library resource because it subclasses Chef's `package` resource/provider to get features such as the multi-package API).\n\n#### actions\n\n- `install`: installs the specified package\n- `upgrade`: aliased to install\n\n#### Properties\n\n- `package_name`: A Habitat package name, must include the origin and package name separated by `/`, for example, `core/redis`\n- `version`: A Habitat version which contains the version and optionally a release separated by `/`, for example, `3.2.3` or `3.2.3/20160920131015`\n- `depot_url`: The habitat depot url where packages will be downloaded from (defaults to public habitat depot)\n- `channel`: The release channel to install from (defaults to `stable`)\n\nWhile it is valid to pass the version and release with a Habitat package as a \"fully qualified package identifier\" when using the `hab` CLI, they must be specified using the `version` property when using this resource. See the examples below.\n\n#### Examples\n\n```ruby\nhab_package \"core/redis\"\n\nhab_package \"core/redis\" do\n  version \"3.2.3\"\n  channel \"unstable\"\nend\n\nhab_package \"core/redis\" do\n  version \"3.2.3/20160920131015\"\nend\n```\n\n### hab_service\n\nManages a Habitat application service using `hab sup`/`hab service`. This requires that `core/hab-sup` be running as a service. See the `hab_sup` resource documentation below for more information about how to set that up with this cookbook.\n\n#### Actions\n\n- `load`: (default action) runs `hab service load` to load and start the specified application service\n- `unload`: runs `hab service unload` to unload and stop the specified application service\n- `start`: runs `hab service start` to start the specified application service\n- `stop`: runs `hab service stop` to stop the specified application service\n\n#### Properties\n\n- `service_name`: name property, the name of the service, must be in the form of `origin/name`\n- `loaded`: state property indicating whether the service is loaded in the supervisor\n- `running`: state property indicating whether the service is running in the supervisor\n- `permanent_peer`: Only valid for `:start` action, passes `--permanent-peer` to the hab command\n- `listen_gossip`: Only valid for `:start` action, passes `--listen-gossip` with the specified address and port, e.g., `0.0.0.0:9638`, to the hab command\n- `listen_http`: Only valid for `:start` action, passes `--listen-http` with the specified address and port, e.g., `0.0.0.0:9631`, to the hab command\n- `org`: Only valid for `:start` action, passes `--org` with the specified org name to the hab command\n- `peer`: Only valid for `:start` action, passes `--peer` with the specified initial peer to the hab command\n- `ring`: Only valid for `:start` action, passes `--ring` with the specified ring key name to the hab command\n- `strategy`: Only valid for `:start` or `:load` actions, passes `--strategy` with the specified update strategy to the hab command\n- `topology`: Only valid for `:start` or `:load` actions, passes `--topology` with the specified service topology to the hab command\n- `depot_url`: Only valid for `:start` or `:load` actions, passes `--url` with the specified Depot URL to the hab command\n- `bind`: Only valid for `:start` or `:load` actions, passes `--bind` with the specified services to bind to the hab command\n- `service_group`: Only valid for `:start` or `:load` actions, passes `--group` with the specified service group to the hab command\n- `config_from`: Only valid for `:start` action, passes `--config-from` with the specified directory to the hab command\n- `override_name`: **Advanced Use** Valid for all actions, passes `--override-name` with the specified name to the hab command; used for running services in multiple supervisors\n\n#### Examples\n\n```ruby\n# install and load nginx\nhab_package \"core/nginx\"\nhab_service \"core/nginx\"\n\nhab_service \"core/nginx unload\" do\n  service_name \"core/nginx\"\n  action :unload\nend\n\n# pass the strategy and topology options to hab service commands (load by default)\nhab_service \"core/redis\" do\n  strategy 'rolling'\n  topology 'standalone'\nend\n```\n\n### hab_sup\n\nRuns a Habitat Supervisor for one or more Habitat Services. This requires [Habitat version 0.20 or higher](https://forums.habitat.sh/t/habitat-0-20-0-released/317). It is used in conjunction with `hab_service` which will manage the services loaded and started within the supervisor.\n\nThe `run` action handles installing Habitat using the `hab_install` resource, ensures that the `core/hab-sup` package is installed using `hab_package`, and then drops off the appropriate init system definitions and manages the service. At this time, only systemd is supported.\n\n#### Actions\n\n- `run`: starts the `hab-sup` service\n\n#### Properties\n\n- `permanent_peer`: Only valid for `:start` action, passes `--permanent-peer` to the hab command\n- `listen_gossip`: Only valid for `:start` action, passes `--listen-gossip` with the specified address and port, e.g., `0.0.0.0:9638`, to the hab command\n- `listen_http`: Only valid for `:start` action, passes `--listen-http` with the specified address and port, e.g., `0.0.0.0:9631`, to the hab command\n- `org`: Only valid for `:start` action, passes `--org` with the specified org name to the hab command\n- `peer`: Only valid for `:start` action, passes `--peer` with the specified initial peer to the hab command\n- `ring`: Only valid for `:start` action, passes `--ring` with the specified ring key name to the hab command\n- `override_name`: **Advanced Use** Valid for all actions, passes `--override-name` with the specified name to the hab command; used for running services in multiple supervisors\n\n#### Examples\n\n```ruby\n# set up with just the defaults\nhab_sup \"default\"\n\n# run with an override name, requires changing listen_http and\n# listen_gossip if a default supervisor is running\nhab_sup 'test-options' do\n  override_name 'myapps'\n  listen_http '0.0.0.0:9999'\n  listen_gossip '0.0.0.0:9998'\nend\n```\n\n## Maintainers\n\nThis cookbook is maintained by Chef's Community Cookbook Engineering team along with the following maintainers:\n\n- Joshua Timberman [joshua@chef.io](mailto:joshua@chef.io)\n\nThe goal of the Community Cookbook Engineering team is to improve cookbook quality and to aid the community in contributing to cookbooks. To learn more about our team, process, and design goals see our [team documentation](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/COOKBOOK_TEAM.MD). To learn more about contributing to cookbooks like this see our [contributing documentation](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD), or if you have general questions about this cookbook come chat with us in #cookbok-engineering on the [Chef Community Slack](http://community-slack.chef.io/)\n\n## License\n\n**Copyright:** 2016-2017, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","redhat":">= 0.0.0","centos":">= 0.0.0","suse":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","amazon":">= 0.0.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/habitat","issues_url":"https://github.com/chef-cookbooks/habitat/issues","chef_version":[[">= 12.11"]],"ohai_version":[]}